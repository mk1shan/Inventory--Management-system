
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import common.OpenPdf;
import static common.OpenPdf.OpenById;
import dao.ConnectionProvider;
import dao.InventoryUtils;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.*;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Mudipa
 */
public class ManageOrder extends javax.swing.JFrame {

    private int customerPk = 0;
    private int productPk = 0;
    private int finalTotalPrice = 0;
    private String orderId = "";

    /**
     * Creates new form ManageOrder
     */
    public ManageOrder() {
        initComponents();
        setLocationRelativeTo(null);
    }

    private void clearProductFileds() {
        productPk = 0;
        txtproductname.setText("");
        txtproductprice.setText("");
        txtproductdescription.setText("");
        txtorderquantity.setText("");
    }

    public String getUniqueId(String prefix) {
        return prefix + System.nanoTime();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableproduct = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablecustomer = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablecart = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCustomeremail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCustomerMobileNumber = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtproductdescription = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtproductname = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtproductprice = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtorderquantity = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jlabel = new javax.swing.JLabel();
        lblfinaltotalprice = new javax.swing.JLabel();
        btnSaveOrderDetails = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Manage Order");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 19, 258, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Customer List");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 85, 119, -1));

        tableproduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price", "Quantity", "Description", "Category ID", "Category Name"
            }
        ));
        tableproduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableproductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableproduct);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 119, 365, 156));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Product List");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 85, 83, -1));

        tablecustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Mobile Number", "Email"
            }
        ));
        tablecustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablecustomerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablecustomer);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 123, 365, 151));

        tablecart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Quantity", "Price", "Description", "sub total"
            }
        ));
        tablecart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablecartMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablecart);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(843, 119, 365, 156));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Cart");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 97, 83, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Selected Customer");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 293, 119, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Mobile Number");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 412, 119, -1));

        txtCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 378, 325, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Name");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 340, 119, -1));

        txtCustomeremail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomeremailActionPerformed(evt);
            }
        });
        getContentPane().add(txtCustomeremail, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 528, 317, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Email");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 496, 119, -1));

        txtCustomerMobileNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerMobileNumberActionPerformed(evt);
            }
        });
        getContentPane().add(txtCustomerMobileNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 453, 325, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Selected Product");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 293, 119, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Product  Name");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 340, 119, -1));

        txtproductdescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproductdescriptionActionPerformed(evt);
            }
        });
        getContentPane().add(txtproductdescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 528, 235, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Product  Price");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 415, 119, -1));

        txtproductname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproductnameActionPerformed(evt);
            }
        });
        getContentPane().add(txtproductname, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 368, 235, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Product  Description");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 496, 119, -1));

        txtproductprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproductpriceActionPerformed(evt);
            }
        });
        getContentPane().add(txtproductprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 453, 235, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Order Quantity");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 562, 119, -1));

        txtorderquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtorderquantityActionPerformed(evt);
            }
        });
        getContentPane().add(txtorderquantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 584, 235, -1));

        jButton1.setText("Add to Cart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 612, 235, -1));

        jlabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jlabel.setText("Total Amount Rs.");
        getContentPane().add(jlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(875, 306, 120, -1));

        lblfinaltotalprice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblfinaltotalprice.setText("0000");
        getContentPane().add(lblfinaltotalprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1001, 306, 38, -1));

        btnSaveOrderDetails.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnSaveOrderDetails.setText("Save Order Details");
        btnSaveOrderDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveOrderDetailsActionPerformed(evt);
            }
        });
        getContentPane().add(btnSaveOrderDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(866, 350, 252, -1));

        jButton3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(866, 412, 252, -1));

        jButton4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(866, 493, 252, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        txtCustomerName.setEditable(false);
        txtCustomerMobileNumber.setEditable(false);
        txtCustomeremail.setEditable(false);

        txtproductname.setEditable(false);
        txtproductprice.setEditable(false);
        txtproductdescription.setEditable(false);

        DefaultTableModel model = (DefaultTableModel) tablecustomer.getModel();
        DefaultTableModel productModel = (DefaultTableModel) tableproduct.getModel();

        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from customer");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("customer_pk"), rs.getString("name"), rs.getString("mobileNumber"), rs.getString("email")});

            }
            rs = st.executeQuery("select * from product inner join category on product.category_fk=category.category_pk");

            while (rs.next()) {
                productModel.addRow(new Object[]{rs.getString("product_pk"), rs.getString("name"), rs.getString("price"), rs.getString("quantity"), rs.getString("description"), rs.getString("category_fk"), rs.getString(8)});

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }

// TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void txtCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerNameActionPerformed

    private void txtCustomeremailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomeremailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomeremailActionPerformed

    private void txtCustomerMobileNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerMobileNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerMobileNumberActionPerformed

    private void txtproductdescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproductdescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtproductdescriptionActionPerformed

    private void txtproductnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproductnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtproductnameActionPerformed

    private void txtproductpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproductpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtproductpriceActionPerformed

    private void txtorderquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtorderquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtorderquantityActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String noOfUnits = txtorderquantity.getText();
        if (!noOfUnits.equals("")) {

            String productName = txtproductname.getText();
            String productDescription = txtproductdescription.getText();
            String productPrice = txtproductprice.getText();

            int totalprice = Integer.parseInt(txtorderquantity.getText()) * Integer.parseInt(productPrice);
            int checkStock = 0;
            int checkProductAlreadyExistInCart = 0;

            try {
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select * from product where product_pk=" + productPk + " ");
                while (rs.next()) {
                    if (rs.getInt("quantity") >= Integer.parseInt(noOfUnits)) {

                        checkStock = 1;

                    } else {

                        JOptionPane.showMessageDialog(null, "product is out of stock.only " + rs.getInt("quantity") + "Left ");
                    }

                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            if (checkStock == 1) {

                DefaultTableModel model = (DefaultTableModel) tablecart.getModel();
                if (tablecart.getRowCount() != 0) {
                    for (int i = 0; i < tablecart.getRowCount(); i++) {
                        if (Integer.parseInt(model.getValueAt(i, 0).toString()) == productPk) {
                            checkProductAlreadyExistInCart = 1;
                            JOptionPane.showMessageDialog(null, "product is already exist in cart");

                        }
                    }

                }

                if (checkProductAlreadyExistInCart == 0) {
                    model.addRow(new Object[]{productPk, productName, noOfUnits, productPrice, productDescription, totalprice});
                    finalTotalPrice = finalTotalPrice + totalprice;
                    lblfinaltotalprice.setText(String.valueOf(finalTotalPrice));
                    JOptionPane.showMessageDialog(null, "added succcesfully");

                }

            }

        } else {

            JOptionPane.showMessageDialog(null, "No of quantity and product field is required");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSaveOrderDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveOrderDetailsActionPerformed

        if (finalTotalPrice != 0 && !txtCustomerName.getText().equals("")) {
            orderId = getUniqueId("Bill-");
            DefaultTableModel dtm = (DefaultTableModel) tablecart.getModel();
            if (tablecart.getRowCount() != 0) {
                for (int i = 0; i < tablecart.getRowCount(); i++) {
                    try {
                        Connection con = ConnectionProvider.getCon();
                        Statement st = con.createStatement();
                        st.executeUpdate("UPDATE product SET quantity = quantity - " + Integer.parseInt(dtm.getValueAt(i, 2).toString())
                                + " WHERE product_pk = " + Integer.parseInt(dtm.getValueAt(i, 0).toString()));
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            }

            try {

                SimpleDateFormat myFormat = new SimpleDateFormat("dd-MM-yyyy");
                Calendar cal = Calendar.getInstance();
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("insert  into orderDetail(orderId,customer_fk,orderDate,totalPaid) values(?,?,?,?)");
                ps.setString(1, orderId);
                ps.setInt(2, customerPk);
                ps.setString(3, myFormat.format(cal.getTime()));
                ps.setInt(4, finalTotalPrice);
                ps.executeUpdate();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            //creating document
            com.itextpdf.text.Document doc = new com.itextpdf.text.Document();

            try {

                SimpleDateFormat myFormat = new SimpleDateFormat("dd-MM-yyyy");
                Calendar cal = Calendar.getInstance();
                
                PdfWriter.getInstance(doc, new FileOutputStream(InventoryUtils.billPath + "" + orderId + ".pdf"));
                doc.open();
                Paragraph projectName = new Paragraph("Inventory Management system\n");
                doc.add(projectName);
                Paragraph starLine = new Paragraph("*************************************");
                doc.add(starLine);
                Paragraph details = new Paragraph("\t OrderId:" + orderId + "\nDate: " +  myFormat.format(cal.getTime()) + "\nTotal paid:" + finalTotalPrice);
                 doc.add(details);
                 doc.add(starLine);
                 PdfPTable tb1 =new PdfPTable(5); 
            PdfPCell nameCell =new PdfPCell(new Phrase("Name"));
            PdfPCell descriptionCell =new PdfPCell(new Phrase("Description"));
            PdfPCell priceCell =new PdfPCell(new Phrase("Price Per Unit"));
            PdfPCell quantityCell =new PdfPCell(new Phrase("Quantity"));
            PdfPCell subTotalPriceCell =new PdfPCell(new Phrase("Sub Tota pricel"));
            
            
            BaseColor backgroundColor = new BaseColor(255,204,51);
            nameCell.setBackgroundColor(backgroundColor);
            descriptionCell.setBackgroundColor(backgroundColor);
            priceCell.setBackgroundColor(backgroundColor);
             quantityCell.setBackgroundColor(backgroundColor);
              subTotalPriceCell.setBackgroundColor(backgroundColor);
            tb1.addCell(nameCell);
                tb1.addCell(  descriptionCell);
                    tb1.addCell( priceCell);
                        tb1.addCell( quantityCell);
                        tb1.addCell( subTotalPriceCell);
                        
                        for (int i=0;i<tablecart.getRowCount();i++){
                       tb1.addCell(tablecart.getValueAt(i, 1).toString());
                       tb1.addCell(tablecart.getValueAt(i, 4).toString());
                       tb1.addCell(tablecart.getValueAt(i, 3).toString());
                       tb1.addCell(tablecart.getValueAt(i, 2).toString());
                       tb1.addCell(tablecart.getValueAt(i, 5).toString());
                        
                        }
                        
                        doc.add(tb1);
                        doc.add(starLine);
                        Paragraph thanksMsg = new Paragraph("Thank you ");
                        doc.add(thanksMsg);
                        OpenPdf.OpenById(orderId);
                        
            
            
            
            
            } catch (Exception e) {

                JOptionPane.showMessageDialog(null, e);
            }
            doc.close();
            setVisible(false);
            new ManageOrder().setVisible(true);
        }
        else{
        JOptionPane.showMessageDialog(null, "please add some product to cart or select customer");
        }

    }//GEN-LAST:event_btnSaveOrderDetailsActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);
        new ManageCategory().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        setVisible(false);       // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tablecustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablecustomerMouseClicked

        int index = tablecustomer.getSelectedRow();
        TableModel model = tablecustomer.getModel();
        String id = model.getValueAt(index, 0).toString();
        customerPk = Integer.parseInt(id);

        String name = model.getValueAt(index, 1).toString();
        txtCustomerName.setText(name);

        String mobileNumber = model.getValueAt(index, 2).toString();
        txtCustomerMobileNumber.setText(mobileNumber);

        String email = model.getValueAt(index, 3).toString();
        txtCustomeremail.setText(email);

        // TODO add your handling code here:
    }//GEN-LAST:event_tablecustomerMouseClicked

    private void tableproductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableproductMouseClicked

        int index = tableproduct.getSelectedRow();
        TableModel model = tableproduct.getModel();
        String id = model.getValueAt(index, 0).toString();
        productPk = Integer.parseInt(id);

        String productName = model.getValueAt(index, 1).toString();
        txtproductname.setText(productName);

        String productPrice = model.getValueAt(index, 2).toString();
        txtproductprice.setText(productPrice);

        String productDesription = model.getValueAt(index, 4).toString();
        txtproductdescription.setText(productDesription);
        // TODO add your handling code here:
    }//GEN-LAST:event_tableproductMouseClicked

    private void tablecartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablecartMouseClicked
        int index = tablecart.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do you want to remove this product", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {

            TableModel model = tablecart.getModel();
            String subtotal = model.getValueAt(index, 5).toString();
            finalTotalPrice = finalTotalPrice - Integer.parseInt(subtotal);
            lblfinaltotalprice.setText(String.valueOf(finalTotalPrice));
            ((DefaultTableModel) tablecart.getModel()).removeRow(index);

        }

// TODO add your handling code here:
    }//GEN-LAST:event_tablecartMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveOrderDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel jlabel;
    private javax.swing.JLabel lblfinaltotalprice;
    private javax.swing.JTable tablecart;
    private javax.swing.JTable tablecustomer;
    private javax.swing.JTable tableproduct;
    private javax.swing.JTextField txtCustomerMobileNumber;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtCustomeremail;
    private javax.swing.JTextField txtorderquantity;
    private javax.swing.JTextField txtproductdescription;
    private javax.swing.JTextField txtproductname;
    private javax.swing.JTextField txtproductprice;
    // End of variables declaration//GEN-END:variables
}
